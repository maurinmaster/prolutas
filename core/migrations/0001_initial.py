# Generated by Django 5.2.4 on 2025-08-08 18:16

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Academia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_fantasia', models.CharField(help_text='Nome popular da academia', max_length=100)),
                ('razao_social', models.CharField(help_text='Nome legal da empresa', max_length=100)),
                ('cnpj', models.CharField(help_text='CNPJ da academia (formato XX.XXX.XXX/XXXX-XX)', max_length=18, unique=True)),
                ('telefone', models.CharField(blank=True, help_text='Telefone de contato principal', max_length=20, null=True)),
                ('endereco', models.CharField(blank=True, help_text='Endereço completo da academia', max_length=255, null=True)),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('whatsapp_numero', models.CharField(blank=True, help_text='Número de celular com código do país (ex: 5575999998888) que enviará as mensagens.', max_length=20, null=True)),
                ('notificar_inadimplencia', models.BooleanField(default=False, help_text='Ativar lembretes para faturas vencidas.')),
                ('notificar_boas_vindas', models.BooleanField(default=False, help_text='Ativar mensagens de boas-vindas para novos alunos.')),
                ('notificar_faltas', models.BooleanField(default=False, help_text='Ativar mensagens para alunos com baixa frequência.')),
                ('dono', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='academia_dono', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(help_text='Nome completo do aluno', max_length=100)),
                ('data_nascimento', models.DateField(help_text='Data de nascimento do aluno')),
                ('cpf', models.CharField(blank=True, help_text='CPF do aluno (formato XXX.XXX.XXX-XX)', max_length=14, null=True)),
                ('contato', models.CharField(help_text='Telefone ou email de contato do aluno', max_length=20)),
                ('foto', models.ImageField(blank=True, help_text='Foto do aluno', null=True, upload_to='alunos_fotos/')),
                ('nome_responsavel', models.CharField(blank=True, help_text='Nome do responsável (se o aluno for menor de idade)', max_length=100, null=True)),
                ('contato_responsavel', models.CharField(blank=True, help_text='Contato do responsável', max_length=20, null=True)),
                ('observacoes_medicas', models.TextField(blank=True, help_text='Restrições ou observações médicas importantes', null=True)),
                ('ativo', models.BooleanField(default=True, help_text='Indica se o aluno está com a matrícula ativa')),
                ('data_matricula', models.DateField(auto_now_add=True)),
                ('dia_vencimento', models.PositiveIntegerField(blank=True, help_text='Dia do mês para o vencimento da mensalidade (ex: 5, 10, 15).', null=True)),
                ('receber_notificacoes', models.BooleanField(default=True, help_text='Se desmarcado, o aluno não receberá nenhuma notificação automática via WhatsApp.')),
                ('academia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alunos', to='core.academia')),
            ],
            options={
                'ordering': ['nome_completo'],
            },
        ),
        migrations.CreateModel(
            name='Assinatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('ativa', 'Ativa'), ('trancada', 'Trancada'), ('cancelada', 'Cancelada')], default='ativa', max_length=10)),
                ('academia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assinaturas', to='core.academia')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assinaturas', to='core.aluno')),
            ],
        ),
        migrations.CreateModel(
            name='Fatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=8)),
                ('data_vencimento', models.DateField()),
                ('data_pagamento', models.DateField(blank=True, null=True)),
                ('academia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faturas', to='core.academia')),
                ('assinatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faturas', to='core.assinatura')),
            ],
            options={
                'verbose_name': 'Fatura',
                'verbose_name_plural': 'Faturas',
                'ordering': ['-data_vencimento'],
            },
        ),
        migrations.CreateModel(
            name='Graduacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icone_arquivo', models.CharField(blank=True, help_text='Nome do arquivo do ícone (ex: faixa-azul.png)', max_length=100, null=True)),
                ('nome', models.CharField(help_text='Ex: Faixa Branca, Prajied Vermelho e Branco', max_length=100)),
                ('ordem', models.PositiveIntegerField(help_text='Ordem da graduação na hierarquia (1, 2, 3...)')),
                ('tempo_minimo_meses', models.PositiveIntegerField(default=6, help_text='Tempo mínimo em meses que o aluno deve permanecer nesta graduação.')),
                ('pre_requisitos', models.TextField(blank=True, help_text='Descreva os pré-requisitos (ex: Frequência mínima de 75%, técnicas X e Y).', null=True)),
                ('academia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='graduacoes', to='core.academia')),
            ],
            options={
                'verbose_name': 'Graduação',
                'verbose_name_plural': 'Graduações',
                'ordering': ['modalidade', 'ordem'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoGraduacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_promocao', models.DateField(default=django.utils.timezone.now)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico_graduacoes', to='core.aluno')),
                ('graduacao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='core.graduacao')),
            ],
            options={
                'verbose_name': 'Histórico de Graduação',
                'verbose_name_plural': 'Históricos de Graduações',
                'ordering': ['-data_promocao'],
            },
        ),
        migrations.CreateModel(
            name='Modalidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('academia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modalidades', to='core.academia')),
            ],
            options={
                'verbose_name': 'Modalidade',
                'verbose_name_plural': 'Modalidades',
                'unique_together': {('academia', 'nome')},
            },
        ),
        migrations.AddField(
            model_name='graduacao',
            name='modalidade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='graduacoes', to='core.modalidade'),
        ),
        migrations.CreateModel(
            name='Plano',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('valor', models.DecimalField(decimal_places=2, max_digits=8)),
                ('duracao_meses', models.PositiveIntegerField(default=1, help_text='Duração do plano em meses. 1 para mensal, 3 para trimestral, etc.')),
                ('descricao', models.TextField(blank=True, null=True)),
                ('academia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planos', to='core.academia')),
            ],
        ),
        migrations.AddField(
            model_name='assinatura',
            name='plano',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assinaturas', to='core.plano'),
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=100)),
                ('contato', models.CharField(blank=True, max_length=20, null=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('academia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professores', to='core.academia')),
            ],
            options={
                'verbose_name': 'Professor',
                'verbose_name_plural': 'Professores',
            },
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('limite_alunos', models.PositiveIntegerField(blank=True, help_text='Deixe em branco para ilimitado', null=True)),
                ('ativa', models.BooleanField(default=True)),
                ('academia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turmas', to='core.academia')),
                ('alunos', models.ManyToManyField(blank=True, related_name='turmas', to='core.aluno')),
                ('modalidade', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='turmas', to='core.modalidade')),
                ('professor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='turmas', to='core.professor')),
            ],
            options={
                'verbose_name': 'Turma',
                'verbose_name_plural': 'Turmas',
            },
        ),
        migrations.CreateModel(
            name='Horario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dias_semana', models.CharField(help_text='Ex: Seg, Ter, Qua', max_length=50)),
                ('horario_inicio', models.TimeField()),
                ('horario_fim', models.TimeField()),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='core.turma')),
            ],
            options={
                'verbose_name': 'Horário',
                'verbose_name_plural': 'Horários',
            },
        ),
        migrations.CreateModel(
            name='DiaNaoLetivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('descricao', models.CharField(help_text='Ex: Feriado de Ano Novo', max_length=200)),
                ('academia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dias_nao_letivos', to='core.academia')),
            ],
            options={
                'verbose_name': 'Dia Não Letivo',
                'verbose_name_plural': 'Dias Não Letivos',
                'ordering': ['data'],
                'unique_together': {('academia', 'data')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='graduacao',
            unique_together={('modalidade', 'ordem')},
        ),
        migrations.CreateModel(
            name='Presenca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(default=django.utils.timezone.now)),
                ('academia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='presencas', to='core.academia')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='presencas', to='core.aluno')),
                ('turma', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='presencas', to='core.turma')),
            ],
            options={
                'verbose_name': 'Presença',
                'verbose_name_plural': 'Presenças',
                'unique_together': {('aluno', 'data')},
            },
        ),
    ]
