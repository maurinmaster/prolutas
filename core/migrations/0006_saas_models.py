# Generated by Django 4.2.7 on 2025-08-13 01:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0005_logmensagem'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssinaturaSaaS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('trial', 'Período de Teste'), ('ativa', 'Ativa'), ('suspensa', 'Suspensa por Inadimplência'), ('cancelada', 'Cancelada'), ('expirada', 'Expirada')], default='trial', max_length=20)),
                ('tipo_pagamento', models.CharField(choices=[('mensal', 'Mensal'), ('anual', 'Anual')], default='mensal', max_length=10)),
                ('data_inicio', models.DateTimeField(default=django.utils.timezone.now)),
                ('data_fim_trial', models.DateTimeField(blank=True, help_text='Data de fim do período de teste', null=True)),
                ('data_vencimento', models.DateField(blank=True, help_text='Data de vencimento da próxima cobrança', null=True)),
                ('data_cancelamento', models.DateTimeField(blank=True, null=True)),
                ('stripe_customer_id', models.CharField(blank=True, help_text='ID do cliente no Stripe', max_length=100, null=True)),
                ('stripe_subscription_id', models.CharField(blank=True, help_text='ID da assinatura no Stripe', max_length=100, null=True)),
                ('valor_atual', models.DecimalField(decimal_places=2, help_text='Valor atual da assinatura', max_digits=10)),
                ('desconto_percentual', models.DecimalField(decimal_places=2, default=0, help_text='Desconto aplicado em percentual', max_digits=5)),
                ('desconto_fixo', models.DecimalField(decimal_places=2, default=0, help_text='Desconto fixo aplicado', max_digits=10)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Assinatura SaaS',
                'verbose_name_plural': 'Assinaturas SaaS',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='PlanoSaaS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do plano (ex: Básico, Profissional, Enterprise)', max_length=100)),
                ('slug', models.SlugField(help_text='Identificador único do plano para URLs', unique=True)),
                ('descricao', models.TextField(help_text='Descrição das funcionalidades do plano')),
                ('preco_mensal', models.DecimalField(decimal_places=2, help_text='Preço mensal em reais', max_digits=10)),
                ('preco_anual', models.DecimalField(decimal_places=2, help_text='Preço anual em reais', max_digits=10)),
                ('destaque', models.BooleanField(default=False, help_text='Se este plano deve ser destacado na página de vendas')),
                ('ordem', models.PositiveIntegerField(default=1, help_text='Ordem de exibição dos planos')),
                ('max_alunos', models.PositiveIntegerField(help_text='Número máximo de alunos permitidos')),
                ('max_professores', models.PositiveIntegerField(help_text='Número máximo de professores permitidos')),
                ('max_modalidades', models.PositiveIntegerField(help_text='Número máximo de modalidades permitidas')),
                ('max_turmas', models.PositiveIntegerField(help_text='Número máximo de turmas permitidas')),
                ('integracao_whatsapp', models.BooleanField(default=True, help_text='Permite integração com WhatsApp')),
                ('sistema_graduacao', models.BooleanField(default=True, help_text='Permite sistema de graduação/faixas')),
                ('relatorios_avancados', models.BooleanField(default=False, help_text='Acesso a relatórios avançados')),
                ('backup_automatico', models.BooleanField(default=False, help_text='Backup automático dos dados')),
                ('suporte_prioritario', models.BooleanField(default=False, help_text='Suporte técnico prioritário')),
                ('api_acesso', models.BooleanField(default=False, help_text='Acesso à API para integrações')),
                ('stripe_price_id_mensal', models.CharField(blank=True, help_text='ID do preço mensal no Stripe', max_length=100, null=True)),
                ('stripe_price_id_anual', models.CharField(blank=True, help_text='ID do preço anual no Stripe', max_length=100, null=True)),
                ('stripe_product_id', models.CharField(blank=True, help_text='ID do produto no Stripe', max_length=100, null=True)),
                ('ativo', models.BooleanField(default=True, help_text='Se o plano está disponível para novas assinaturas')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Plano SaaS',
                'verbose_name_plural': 'Planos SaaS',
                'ordering': ['ordem', 'nome'],
            },
        ),
        migrations.AlterField(
            model_name='academia',
            name='cnpj',
            field=models.CharField(blank=True, help_text='CNPJ da academia (formato XX.XXX.XXX/XXXX-XX) - Opcional para pessoas físicas', max_length=18, null=True, unique=True),
        ),
        migrations.CreateModel(
            name='HistoricoAssinaturaSaaS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_evento', models.CharField(choices=[('criacao', 'Criação da Assinatura'), ('upgrade', 'Upgrade de Plano'), ('downgrade', 'Downgrade de Plano'), ('suspensao', 'Suspensão por Inadimplência'), ('reativacao', 'Reativação'), ('cancelamento', 'Cancelamento'), ('pagamento', 'Pagamento Recebido'), ('falha_pagamento', 'Falha no Pagamento'), ('inicio_trial', 'Início do Período de Teste'), ('fim_trial', 'Fim do Período de Teste')], max_length=20)),
                ('descricao', models.TextField(help_text='Descrição detalhada do evento')),
                ('valor_anterior', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('valor_atual', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stripe_invoice_id', models.CharField(blank=True, max_length=100, null=True)),
                ('stripe_payment_intent_id', models.CharField(blank=True, max_length=100, null=True)),
                ('data_evento', models.DateTimeField(auto_now_add=True)),
                ('assinatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico', to='core.assinaturasaas')),
                ('plano_anterior', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.planosaas')),
                ('plano_atual', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.planosaas')),
                ('usuario_responsavel', models.ForeignKey(blank=True, help_text='Usuário que executou a ação (se aplicável)', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Histórico de Assinatura SaaS',
                'verbose_name_plural': 'Históricos de Assinaturas SaaS',
                'ordering': ['-data_evento'],
            },
        ),
        migrations.AddField(
            model_name='assinaturasaas',
            name='academia',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='assinatura_saas', to='core.academia'),
        ),
        migrations.AddField(
            model_name='assinaturasaas',
            name='plano',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assinaturas', to='core.planosaas'),
        ),
    ]
